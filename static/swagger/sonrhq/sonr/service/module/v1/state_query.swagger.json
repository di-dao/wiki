{
  "swagger": "2.0",
  "info": {
    "title": "sonrhq/sonr/service/module/v1/state_query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "StateQueryService"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetBaseParams": {
      "post": {
        "summary": "GetBaseParams queries the BaseParams singleton.",
        "operationId": "StateQueryService_GetBaseParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetBaseParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetBaseParamsRequest is the StateQuery/GetBaseParamsRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetBaseParamsRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetCredential": {
      "post": {
        "summary": "Get queries the Credential table by its primary key.",
        "operationId": "StateQueryService_GetCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetCredentialRequest is the StateQuery/GetCredentialRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetCredentialByCredentialId": {
      "post": {
        "summary": "GetCredentialByCredentialId queries the Credential table by its CredentialId index",
        "operationId": "StateQueryService_GetCredentialByCredentialId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetCredentialByCredentialIdRequest is the StateQuery/GetCredentialByCredentialIdRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetCredentialByOriginHandle": {
      "post": {
        "summary": "GetCredentialByOriginHandle queries the Credential table by its OriginHandle index",
        "operationId": "StateQueryService_GetCredentialByOriginHandle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetCredentialByOriginHandleRequest is the StateQuery/GetCredentialByOriginHandleRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetCredentialByPublicKey": {
      "post": {
        "summary": "GetCredentialByPublicKey queries the Credential table by its PublicKey index",
        "operationId": "StateQueryService_GetCredentialByPublicKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetCredentialByPublicKeyRequest is the StateQuery/GetCredentialByPublicKeyRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetOwnParams": {
      "post": {
        "summary": "GetOwnParams queries the OwnParams singleton.",
        "operationId": "StateQueryService_GetOwnParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetOwnParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetOwnParamsRequest is the StateQuery/GetOwnParamsRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetOwnParamsRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetReadParams": {
      "post": {
        "summary": "GetReadParams queries the ReadParams singleton.",
        "operationId": "StateQueryService_GetReadParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetReadParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetReadParamsRequest is the StateQuery/GetReadParamsRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetReadParamsRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetServiceRecord": {
      "post": {
        "summary": "Get queries the ServiceRecord table by its primary key.",
        "operationId": "StateQueryService_GetServiceRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetServiceRecordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetServiceRecordRequest is the StateQuery/GetServiceRecordRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetServiceRecordRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetServiceRecordByOrigin": {
      "post": {
        "summary": "GetServiceRecordByOrigin queries the ServiceRecord table by its Origin index",
        "operationId": "StateQueryService_GetServiceRecordByOrigin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetServiceRecordByOriginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetServiceRecordByOriginRequest is the StateQuery/GetServiceRecordByOriginRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetServiceRecordByOriginRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetWitness": {
      "post": {
        "summary": "Get queries the Witness table by its primary key.",
        "operationId": "StateQueryService_GetWitness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWitnessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetWitnessRequest is the StateQuery/GetWitnessRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWitnessRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetWitnessByOriginKey": {
      "post": {
        "summary": "GetWitnessByOriginKey queries the Witness table by its OriginKey index",
        "operationId": "StateQueryService_GetWitnessByOriginKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetWitnessByOriginKeyRequest is the StateQuery/GetWitnessByOriginKeyRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/GetWriteParams": {
      "post": {
        "summary": "GetWriteParams queries the WriteParams singleton.",
        "operationId": "StateQueryService_GetWriteParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWriteParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "GetWriteParamsRequest is the StateQuery/GetWriteParamsRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.GetWriteParamsRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/ListCredential": {
      "post": {
        "summary": "ListCredential queries the Credential table using prefix and range queries against defined indexes.",
        "operationId": "StateQueryService_ListCredential",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "ListCredentialRequest is the StateQuery/ListCredentialRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/ListServiceRecord": {
      "post": {
        "summary": "ListServiceRecord queries the ServiceRecord table using prefix and range queries against defined indexes.",
        "operationId": "StateQueryService_ListServiceRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "ListServiceRecordRequest is the StateQuery/ListServiceRecordRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    },
    "/sonrhq.sonr.service.module.v1.StateQueryService/ListWitness": {
      "post": {
        "summary": "ListWitness queries the Witness table using prefix and range queries against defined indexes.",
        "operationId": "StateQueryService_ListWitness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "ListWitnessRequest is the StateQuery/ListWitnessRequest request type.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest"
            }
          }
        ],
        "tags": ["StateQueryService"]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "sonrhq.sonr.service.module.v1.BaseParams": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServicePermissions"
        },
        "resident_key": {
          "type": "string"
        },
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "authentication_attachment": {
          "type": "string"
        }
      },
      "description": "BaseParams is the total supply of the module."
    },
    "sonrhq.sonr.service.module.v1.Credential": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "handle": {
          "type": "string"
        },
        "transport": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "public_key": {
          "type": "string",
          "format": "byte"
        },
        "attestation_type": {
          "type": "string"
        },
        "credential_id": {
          "type": "string",
          "format": "byte"
        },
        "origin": {
          "type": "string"
        }
      },
      "description": "Credential is the total supply of the module."
    },
    "sonrhq.sonr.service.module.v1.GetBaseParamsRequest": {
      "type": "object",
      "description": "GetBaseParamsRequest is the StateQuery/GetBaseParamsRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetBaseParamsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.BaseParams"
        }
      },
      "description": "GetBaseParamsResponse is the StateQuery/GetBaseParamsResponse request type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdRequest": {
      "type": "object",
      "properties": {
        "credential_id": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "GetCredentialByCredentialIdRequest is the StateQuery/GetCredentialByCredentialIdRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Credential"
        }
      },
      "description": "GetCredentialByCredentialIdResponse is the StateQuery/GetCredentialByCredentialIdResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleRequest": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "handle": {
          "type": "string"
        }
      },
      "description": "GetCredentialByOriginHandleRequest is the StateQuery/GetCredentialByOriginHandleRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Credential"
        }
      },
      "description": "GetCredentialByOriginHandleResponse is the StateQuery/GetCredentialByOriginHandleResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyRequest": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "GetCredentialByPublicKeyRequest is the StateQuery/GetCredentialByPublicKeyRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Credential"
        }
      },
      "description": "GetCredentialByPublicKeyResponse is the StateQuery/GetCredentialByPublicKeyResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id specifies the value of the id field in the primary key."
        }
      },
      "description": "GetCredentialRequest is the StateQuery/GetCredentialRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetCredentialResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Credential",
          "description": "value is the response value."
        }
      },
      "description": "GetCredentialResponse is the StateQuery/GetCredentialResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetOwnParamsRequest": {
      "type": "object",
      "description": "GetOwnParamsRequest is the StateQuery/GetOwnParamsRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetOwnParamsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.OwnParams"
        }
      },
      "description": "GetOwnParamsResponse is the StateQuery/GetOwnParamsResponse request type."
    },
    "sonrhq.sonr.service.module.v1.GetReadParamsRequest": {
      "type": "object",
      "description": "GetReadParamsRequest is the StateQuery/GetReadParamsRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetReadParamsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ReadParams"
        }
      },
      "description": "GetReadParamsResponse is the StateQuery/GetReadParamsResponse request type."
    },
    "sonrhq.sonr.service.module.v1.GetServiceRecordByOriginRequest": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        }
      },
      "description": "GetServiceRecordByOriginRequest is the StateQuery/GetServiceRecordByOriginRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetServiceRecordByOriginResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServiceRecord"
        }
      },
      "description": "GetServiceRecordByOriginResponse is the StateQuery/GetServiceRecordByOriginResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetServiceRecordRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id specifies the value of the id field in the primary key."
        }
      },
      "description": "GetServiceRecordRequest is the StateQuery/GetServiceRecordRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetServiceRecordResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServiceRecord",
          "description": "value is the response value."
        }
      },
      "description": "GetServiceRecordResponse is the StateQuery/GetServiceRecordResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyRequest": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      },
      "description": "GetWitnessByOriginKeyRequest is the StateQuery/GetWitnessByOriginKeyRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Witness"
        }
      },
      "description": "GetWitnessByOriginKeyResponse is the StateQuery/GetWitnessByOriginKeyResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetWitnessRequest": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64",
          "description": "index specifies the value of the index field in the primary key."
        }
      },
      "description": "GetWitnessRequest is the StateQuery/GetWitnessRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetWitnessResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Witness",
          "description": "value is the response value."
        }
      },
      "description": "GetWitnessResponse is the StateQuery/GetWitnessResponse response type."
    },
    "sonrhq.sonr.service.module.v1.GetWriteParamsRequest": {
      "type": "object",
      "description": "GetWriteParamsRequest is the StateQuery/GetWriteParamsRequest request type."
    },
    "sonrhq.sonr.service.module.v1.GetWriteParamsResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.WriteParams"
        }
      },
      "description": "GetWriteParamsResponse is the StateQuery/GetWriteParamsResponse request type."
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest": {
      "type": "object",
      "properties": {
        "prefix_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey",
          "description": "prefix_query specifies the index key value to use for the prefix query."
        },
        "range_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery",
          "description": "range_query specifies the index key from/to values to use for the range query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
          "description": "pagination specifies optional pagination parameters."
        }
      },
      "description": "ListCredentialRequest is the StateQuery/ListCredentialRequest request type."
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Id",
          "description": "id specifies the value of the Id index key to use in the query."
        },
        "handle": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle",
          "description": "handle specifies the value of the Handle index key to use in the query."
        },
        "origin_handle": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle",
          "description": "origin_handle specifies the value of the OriginHandle index key to use in the query."
        },
        "credential_id": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.CredentialId",
          "description": "credential_id specifies the value of the CredentialId index key to use in the query."
        },
        "public_key": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.PublicKey",
          "description": "public_key specifies the value of the PublicKey index key to use in the query."
        }
      },
      "description": "IndexKey specifies the value of an index key to use in prefix and range queries."
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.CredentialId": {
      "type": "object",
      "properties": {
        "credential_id": {
          "type": "string",
          "format": "byte",
          "description": "credential_id is the value of the credential_id field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle": {
      "type": "object",
      "properties": {
        "handle": {
          "type": "string",
          "description": "handle is the value of the handle field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Id": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the value of the id field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "description": "origin is the value of the origin field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        },
        "handle": {
          "type": "string",
          "description": "handle is the value of the handle field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.PublicKey": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string",
          "format": "byte",
          "description": "public_key is the value of the public_key field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey",
          "description": "from is the index key to use for the start of the range query.\nTo query from the start of an index, specify an index key for that index with empty values."
        },
        "to": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey",
          "description": "to is the index key to use for the end of the range query.\nThe index key type MUST be the same as the index key type used for from.\nTo query from to the end of an index it can be omitted."
        }
      },
      "description": "RangeQuery specifies the from/to index keys for a range query."
    },
    "sonrhq.sonr.service.module.v1.ListCredentialResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Credential"
          },
          "description": "values are the results of the query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination is the pagination response."
        }
      },
      "description": "ListCredentialResponse is the StateQuery/ListCredentialResponse response type."
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest": {
      "type": "object",
      "properties": {
        "prefix_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey",
          "description": "prefix_query specifies the index key value to use for the prefix query."
        },
        "range_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery",
          "description": "range_query specifies the index key from/to values to use for the range query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
          "description": "pagination specifies optional pagination parameters."
        }
      },
      "description": "ListServiceRecordRequest is the StateQuery/ListServiceRecordRequest request type."
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Id",
          "description": "id specifies the value of the Id index key to use in the query."
        },
        "origin": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Origin",
          "description": "origin specifies the value of the Origin index key to use in the query."
        },
        "controller": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Controller",
          "description": "controller specifies the value of the Controller index key to use in the query."
        }
      },
      "description": "IndexKey specifies the value of an index key to use in prefix and range queries."
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Controller": {
      "type": "object",
      "properties": {
        "controller": {
          "type": "string",
          "description": "controller is the value of the controller field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Id": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the value of the id field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Origin": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "description": "origin is the value of the origin field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey",
          "description": "from is the index key to use for the start of the range query.\nTo query from the start of an index, specify an index key for that index with empty values."
        },
        "to": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey",
          "description": "to is the index key to use for the end of the range query.\nThe index key type MUST be the same as the index key type used for from.\nTo query from to the end of an index it can be omitted."
        }
      },
      "description": "RangeQuery specifies the from/to index keys for a range query."
    },
    "sonrhq.sonr.service.module.v1.ListServiceRecordResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServiceRecord"
          },
          "description": "values are the results of the query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination is the pagination response."
        }
      },
      "description": "ListServiceRecordResponse is the StateQuery/ListServiceRecordResponse response type."
    },
    "sonrhq.sonr.service.module.v1.ListWitnessRequest": {
      "type": "object",
      "properties": {
        "prefix_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey",
          "description": "prefix_query specifies the index key value to use for the prefix query."
        },
        "range_query": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery",
          "description": "range_query specifies the index key from/to values to use for the range query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
          "description": "pagination specifies optional pagination parameters."
        }
      },
      "description": "ListWitnessRequest is the StateQuery/ListWitnessRequest request type."
    },
    "sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey": {
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.Index",
          "description": "index specifies the value of the Index index key to use in the query."
        },
        "origin_key": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.OriginKey",
          "description": "origin_key specifies the value of the OriginKey index key to use in the query."
        }
      },
      "description": "IndexKey specifies the value of an index key to use in prefix and range queries."
    },
    "sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.Index": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64",
          "description": "index is the value of the index field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.OriginKey": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "description": "origin is the value of the origin field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        },
        "key": {
          "type": "string",
          "description": "key is the value of the key field in the index.\nIt can be omitted to query for all valid values of that field in this segment of the index."
        }
      }
    },
    "sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey",
          "description": "from is the index key to use for the start of the range query.\nTo query from the start of an index, specify an index key for that index with empty values."
        },
        "to": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey",
          "description": "to is the index key to use for the end of the range query.\nThe index key type MUST be the same as the index key type used for from.\nTo query from to the end of an index it can be omitted."
        }
      },
      "description": "RangeQuery specifies the from/to index keys for a range query."
    },
    "sonrhq.sonr.service.module.v1.ListWitnessResponse": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sonrhq.sonr.service.module.v1.Witness"
          },
          "description": "values are the results of the query."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination is the pagination response."
        }
      },
      "description": "ListWitnessResponse is the StateQuery/ListWitnessResponse response type."
    },
    "sonrhq.sonr.service.module.v1.OwnParams": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServicePermissions"
        },
        "resident_key": {
          "type": "string"
        },
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "authentication_attachment": {
          "type": "string"
        }
      },
      "description": "OwnParams is the total supply of the module."
    },
    "sonrhq.sonr.service.module.v1.ReadParams": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServicePermissions"
        },
        "resident_key": {
          "type": "string"
        },
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "authentication_attachment": {
          "type": "string"
        }
      },
      "description": "ReadParams is the total supply of the module."
    },
    "sonrhq.sonr.service.module.v1.ServicePermissions": {
      "type": "string",
      "enum": [
        "SERVICE_PERMISSIONS_BASE",
        "SERVICE_PERMISSIONS_READ",
        "SERVICE_PERMISSIONS_WRITE",
        "SERVICE_PERMISSIONS_OWN"
      ],
      "default": "SERVICE_PERMISSIONS_BASE",
      "description": "ServicePermissions is the specified permissions the application has with the\nuser's account.\n\n - SERVICE_PERMISSIONS_BASE: SERVICE_PERMISSIONS_BASE - off chain visibility\n - SERVICE_PERMISSIONS_READ: SERVICE_PERMISSIONS_READ - read access\n - SERVICE_PERMISSIONS_WRITE: SERVICE_PERMISSIONS_WRITE - write access\n - SERVICE_PERMISSIONS_OWN: SERVICE_PERMISSIONS_OWN - ownership"
    },
    "sonrhq.sonr.service.module.v1.ServiceRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "origin": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServicePermissions"
        }
      },
      "description": "ServiceRecord is the balance of an account."
    },
    "sonrhq.sonr.service.module.v1.Witness": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "origin": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Identifier is a psuedo-anonomyous representation of a unique id on the Sonr blockchain. Used as\nauthorizer to the underlying wallet interface."
    },
    "sonrhq.sonr.service.module.v1.WriteParams": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/sonrhq.sonr.service.module.v1.ServicePermissions"
        },
        "resident_key": {
          "type": "string"
        },
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "authentication_attachment": {
          "type": "string"
        }
      },
      "description": "WriteParams is the total supply of the module."
    }
  }
}
